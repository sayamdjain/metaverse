const scene = new THREE.Scene()
const camera = new THREE.PerspectiveCamera( 75, window.innerWidth / window.innerHeight, 0.1, 1000 )
const renderer = new THREE.WebGLRenderer({ antialias: true})

renderer.setSize( window.innerWidth, window.innerHeight )
// sets renderer background color
renderer.setClearColor("0xffffff,0")
document.body.appendChild( renderer.domElement )
camera.position.z = 5

// resize canvas on resize window
window.addEventListener( 'resize', () => {
	let width = window.innerWidth
	let height = window.innerHeight
	renderer.setSize( width, height )
	camera.aspect = width / height
	camera.updateProjectionMatrix()
})
//basic  plane
var geometry = new THREE.PlaneGeometry( 3,3,32)
var material = new THREE.MeshLambertMaterial( { color: 0xff0051 })
var plane = new THREE.Mesh ( geometry, material )
plane.position.set(-6,2,0)
scene.add( plane )
var geometry = new THREE.BoxGeometry( 3, 1, 3)
var material = new THREE.MeshLambertMaterial( { color: 0xff0051 })
var cube = new THREE.Mesh ( geometry, material )
cube.position.set(0,2,0)
scene.add( cube )
var geometry = new THREE.CylinderGeometry( 1.5, 1.5, 1, 32)
var material = new THREE.MeshLambertMaterial( { color: 0xff0051 })
var cylinder = new THREE.Mesh ( geometry, material )
cylinder.position.set(5,2,0)
scene.add( cylinder )
var geometry = new THREE.IcosahedronGeometry( 1.5, 0)
var material = new THREE.MeshLambertMaterial( { color: 0xff0051 })
var icosahedron = new THREE.Mesh ( geometry, material )
icosahedron.position.set(-5,-2,0)
scene.add( icosahedron )
var geometry = new THREE.ConeGeometry( 1,2,32)
var material = new THREE.MeshLambertMaterial( { color: 0xff0051 })
var cone = new THREE.Mesh ( geometry, material )
cone.position.set(0,-2,0)
scene.add( cone )
var geometry = new THREE.SphereGeometry( 1,32,32)
var material = new THREE.MeshLambertMaterial( { color: 0xff0051 })
var sphere = new THREE.Mesh ( geometry, material )
sphere.position.set(5,-2,0)
scene.add( sphere )
// ambient light
var ambientLight = new THREE.AmbientLight ( 0xffffff, 0.2)
scene.add( ambientLight )

// point light
var pointLight = new THREE.PointLight( 0xffffff, 1 );
pointLight.position.set( 25, 50, 25 );
scene.add( pointLight );


function animate() {
	requestAnimationFrame( animate )
	// plane.rotation.x += 0.04;
	// plane.rotation.y += 0.04;
    // cube.rotation.x += 0.04;
	// cube.rotation.y += 0.04;
    // cylinder.rotation.x += 0.04;
	// cylinder.rotation.y += 0.04;
    // icosahedron.rotation.x += 0.04;
	// icosahedron.rotation.y += 0.04;
    // cone.rotation.x += 0.04;
	// cone.rotation.y += 0.04;
    // sphere.rotation.x += 0.04;
	// sphere.rotation.y += 0.04;
	renderer.render( scene, camera )
}
animate()
