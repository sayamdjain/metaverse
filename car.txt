import * as THREE from "three";
//adding scene
const scene = new THREE.Scene();
const PlayerCar = Car();
scene.add(PlayerCar) ;
// creating  lights
const ambientLight = new THREE.AmbientLight(0xffffff,0.6);
scene.add(ambientLight);

const dirLight = new THREE.DirectionalLight(0xffffff,0.6);
dirLight.position.set(100,-300,400);
scene.add(dirLight);
//creating camera
const aspectRatio = window.innerWidth/window.innerHeight;
const cameraWidth = 150;
const cameraHeight = cameraWidth/aspectRatio;
const orthographicCamera = new THREE.OrthographicCamera(
cameraWidth/-2,
cameraWidth/2,
cameraHeight/2,
cameraHeight/-2,
0,
1000
);
camera.position.set(200,-200,300);
camera.up.set(0,0,1);
camera.lookat(0,0,0);
 // setting renderer
 const renderer = new THREE.WebGLRenderer({antialias : true});
 renderer.setSize(window.innerWidth,window.innerHeight);
 renderer.render(scene,camera);
 document.body.appendChild(renderer.domAElement)
function Car(){
    const car = new THREE.Group();
   const backWheel = Wheel()
   
    car.position.x = -18;
    car.add(backWheel);
    
    const frontWheel = Wheel();

    
    car.position.x = 18;
    car.add(frontWheel);
    const main = new THREE.Mesh(
      new THREE.BufferGeometry(60,30,15),
      new THREE.MeshLambertMaterial({color:0xa52523})
    );
    main.position.x = 12;
    scene.add(main);
    const cabin = new THREE.Mesh(
      new THREE.BufferGeometry(33,24,12),
      new THREE.MeshLambertMaterial({color:0xa52523})
    );
    cabin.position.x = -6;
    cabin.position.z = 25.5
    scene.add(cabin);
 


 }
 function Wheel(){
   const wheel = new  THREE.Mesh(
      new THREE.BufferGeometry(12,33,12),
      new THREE.MeshLambertMaterial({color : 0xffffff})
   );
   wheel.position.z = 6;
   return wheel;
 }
 function animate() {
	requestAnimationFrame( animate )
	
}
animate()
